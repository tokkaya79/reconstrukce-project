body {
    font-family: 'Open Sans', sans-serif;
    font-size: 18px;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 10px;
}

.title {
    font-size: 40px;
    letter-spacing: 0.03em;
}

.btn {
    background-color: #990000;
    border: none;
    color: #fff;
    padding: 16px 30px;
}

.logo {
    color: #990000;
    font-family: 'Oswald', sans-serif;
    font-weight: 500;
    font-size: 30px;
    position: relative;

    &::after {
        position: absolute;
        content: '';
        background-image: url(../images/icons/Logo.svg);
        background-size: contain;
        background-repeat: no-repeat;
        width: 40px;
        height: 40px;
    }
}

.footer {
    background-color: #949899;
    padding: 80px 0;
    font-size: 25px;

    &__adresa{
        padding-top: 2rem;
        padding-bottom: 1rem;
        display: block;
        max-width: 246px;
    }
    &__inner{
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    &__item{
        position: relative;
        margin-bottom: 1rem;
        padding-left: 35px;
        &:first-child{
            font-family: 'Oswald', sans-serif;
            font-weight: 500;
            font-size: 28px;
        }
        &::before{
            position: absolute;
            content: '';
            width: 30px;
            height: 30px;
            background-size: contain;
            background-repeat: no-repeat;
            left: 0;
        }
        &--phone::before{
            background-image: url(../images/phone.svg);
        }
        &--mail::before{
            background-image: url(../images/mail.svg);
        }
    }
    &__link{   
        color: #990000;
        text-decoration: underline;
        transition: color 0.4s;
        &:hover{
            color: #000;
        }
    }
    &__copy{
        padding: 20px 5px;
        text-align: center;
        color: #fff;
        background-color: #990000;
    }
}

@function max($numbers...) {
  @return m#{a}x(#{numbers});
}
@function min($numbers...) {
  @return m#{i}n(#{numbers});
}